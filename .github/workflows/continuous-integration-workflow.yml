name: bootstrap4-sample-test
on: [push]

jobs:
  build-and-test:
    name: laravel-app-build
    # This job runs on Linux
    runs-on: ubuntu-latest
    # container:
    #   image: 708u/laravel-alpine:7.4.3
    #   env:
    #     APP_ENV: testing
    #     APP_URL: http://localhost
    #     DB_CONNECTION: mysql
    #     DB_HOST: mysql
    #     CACHE_DRIVER: redis
    #     QUEUE_CONNECTION: redis
    #     SESSION_DRIVER: redis
    #     REDIS_HOST: redis
    #     DUSK_HOST: http://nginx
    #     TELESCOPE_ENABLED: false
    #   volumes:
    #     - "./:/app"
    #     - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    #   ports:
    #     - 8080
    # services:
    #   nginx:
    #     image: 708u/laravel-nginx
    #     # volumes:
    #     #   - /docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    #     #   - ./public:/app/public
    #     ports:
    #     - 80:80
    #   mysql:
    #     image: mysql:5.7
    #     env:
    #       MYSQL_DATABASE: bootstrap-sample
    #       MYSQL_ROOT_PASSWORD: root
    #       MYSQL_ROOT_HOST: "%"
    #     ports:
    #       - 3306
    #     volumes:
    #       - "./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf"
    #   redis:
    #     image: redis:5.0.7-alpine
    #     ports:
    #       - 6379
    #   selenium:
    #     image: selenium/standalone-chrome
    #     ports:
    #       - 4444
    steps:
      - uses: actions/checkout@v2
      - run: cp .env.example .env
      - run: docker-compose up -d
      - name: Cache composer vendor
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock') }}
      - run: php artisan key:generate
      - run: docker-compose exec app composer install
      - name: Waiting for MySQL to be ready
        run : |
          for i in `seq 1 10`;
          do
            nc -z localhost mysql && echo Success && exit 0
            echo -n .
            sleep 1
          done
      - run: docker-compose exec app php artisan migrate --seed
      - run: docker-compose exec app vendor/bin/phpunit
      - name: Archive screenshots
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: e2e-screenshots
          path: tests/Browser/screenshot
